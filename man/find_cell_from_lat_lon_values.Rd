% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cfdtk.R
\name{find_cell_from_lat_lon_values}
\alias{find_cell_from_lat_lon_values}
\title{Find cell from lat/lon values}
\usage{
find_cell_from_lat_lon_values(cell_orog_lookup, lat, lon, domain = NULL)
}
\arguments{
\item{cell_orog_lookup}{Cell orography lookup, as created by \code{create_cell_orography_lookup}}

\item{lat}{Latitude, in decimal degrees}

\item{lon}{Longitude, in decimal degrees}

\item{domain}{Domain (not required if cell orography lookup has only one domain)}
}
\value{
Cell number
}
\description{
Find the cell in a domain that matches the given latitute and longitude.
This is only intended for a quick lookup for a single cell.
For multiple cells, use \code{raster::cellFromXY}.
\emph{**TODO** use cellFromXY even for one cell and vectorise - recreate raster from cell_orog_lookup, then convert lat/lon to SpatialPoints and then use cellFromXY}
domain_raster <- raster(...)
domain_points <- SpatialPoints(c(lon, lat), proj4string = CRS(cfdtk:::common_defaults$proj4string))
cells <- raster::cellFromXY(domain_raster, domain_points)
return a tibble with all results?
}
\details{
Only one cell is expected to be found for a particular pair of lat/lon values.
As a result, a \code{warning} error will be thrown if a cell is not found, or if multiple cells are found
(since this would indicate a malformed cell orography lookup, or invalid lat/lon inputs).

Take care when providing lat/lon values that lie exactly on the border between multiple cells.
If this happens, then the chosen cell will the closest to 0 latitude and 0 longitude.
}
\examples{
\donttest{
cell_orog_lookup <- readRDS('examples/cell_orography_lookup_ccam.rds')
cell <- find_cell_from_lat_lon_values(cell_orog_lookup,
                                      lat = -42.8824,
                                      lon = 147.3301,
                                      domain = 'AUS-50')
}
}
